Aim: To perform a java program for UDP client and server.

Algorithm: 
SERVER: 
1. Create a new Datagram Socket.
2. Create a new Datagram packet.
3. Create a message to be sent.
4. Convert into bytes. 
5. Create a packet. 
6. Send packet
7. Wait for acknowledgement from client. 
8. Print data from client. 
9. Stop the program
CLIENT: 
1. Create new Datagram Socket. 
2. Create new Datagram packet. 
3. Get the packet.
4. Print the content. 
5. Create a new packet.
6. Send to server.
7. Stop the program.

Server:

import java.net.*;
import java.io.*;
public class udpserver{
	public static int client=789;
	public static int server=790;
	public static void main(String arg[]) throws IOException{
		String s;
		InetAddress id=InetAddress.getLocalHost();
		BufferedReader dis=new BufferedReader(new InputStreamReader(System.in));
		DatagramSocket ds=new DatagramSocket(server);
		byte b[]=new byte[1024];
		System.out.println("Server Side.... Sending....");
		System.out.println("\n"+id);
		while(true){
			s=dis.readLine();
			if(s.equals("end")){
				b=s.getBytes();
				DatagramPacket dp=new DatagramPacket(b,s.length(),id,client);
				ds.send(dp);
				break;
			}else{
				b=s.getBytes();
				DatagramPacket dp=new DatagramPacket(b,s.length(),id,client);
				ds.send(dp);
			}
		}
	}
}


Client:

import java.net.*;
import java.io.*;
public class udpclient{
	public static int client=789;
	public static void main(String args[]) throws IOException{
		DatagramSocket ds=new DatagramSocket(client);
		byte b[]=new byte[1024];
		System.out.println("client....receiving....");
		while(true){
			DatagramPacket dp=new DatagramPacket(b,b.length);
			ds.receive(dp);
			String s=new String(dp.getData(),0,dp.getLength());
			if(s.equals("end")) break;
			else System.out.println(s);
		}
	}
}